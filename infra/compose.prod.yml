# Docker Compose for Thudbot Production
# Usage: docker compose -f compose.prod.yml up -d

services:
  redis:
    image: redis:7-alpine
    container_name: thudbot-redis-prod
    # No external port exposure in production
    command: redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - thudbot-network
    restart: always
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.5'

  backend:
    # Use pre-built image from registry instead of building
    image: your-registry/thudbot-backend:latest
    container_name: thudbot-backend-prod
    ports:
      - "8000:8000"
    environment:
      - COMPOSE_MODE=true
    env_file:
      - ../.env.prod  # Production environment file
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/docs"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 60s
    networks:
      - thudbot-network
    restart: always
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'

networks:
  thudbot-network:
    driver: bridge